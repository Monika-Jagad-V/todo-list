{"ast":null,"code":"import _slicedToArray from \"/Users/blossom/Desktop/react app/Todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/blossom/Desktop/react app/Todo/src/components/TodoItem/index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport TodoTextInput from \"../ToDoAddForm/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TodoItem = function TodoItem(props) {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editing = _useState2[0],\n      setEditing = _useState2[1];\n\n  var handleDoubleClick = function handleDoubleClick() {\n    setEditing(true);\n  };\n\n  var handleSave = function handleSave(id, text) {\n    if (text.length === 0) {\n      props.deleteTodo(id);\n    } else {\n      props.editTodo(id, text);\n    }\n\n    setEditing(false);\n  };\n\n  var todo = props.todo,\n      completeTodo = props.completeTodo,\n      deleteTodo = props.deleteTodo;\n  var element;\n\n  if (editing) {\n    element = /*#__PURE__*/_jsxDEV(TodoTextInput, {\n      text: todo.text,\n      editing: editing,\n      onSave: function onSave(text) {\n        return handleSave(todo.id, text);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this);\n  } else {\n    element = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle\",\n        type: \"checkbox\",\n        checked: todo.completed,\n        onChange: function onChange() {\n          return completeTodo(todo.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        onDoubleClick: handleDoubleClick,\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"destroy\",\n        onClick: function onClick() {\n          return deleteTodo(todo.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classnames({\n      completed: todo.completed,\n      editing: editing\n    }),\n    children: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TodoItem, \"8NtxifNHNH77GP4fOyN5Q3EVoDA=\");\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","classnames","TodoTextInput","TodoItem","props","editing","setEditing","handleDoubleClick","handleSave","id","text","length","deleteTodo","editTodo","todo","completeTodo","element","completed"],"sources":["/Users/blossom/Desktop/react app/Todo/src/components/TodoItem/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport TodoTextInput from \"../ToDoAddForm/index\";\n\nconst TodoItem = (props) => {\n  const [editing, setEditing] = useState(false);\n\n  const handleDoubleClick = () => {\n    setEditing(true);\n  };\n\n  const handleSave = (id, text) => {\n    if (text.length === 0) {\n      props.deleteTodo(id);\n    } else {\n      props.editTodo(id, text);\n    }\n    setEditing(false);\n  };\n  const { todo, completeTodo, deleteTodo } = props;\n\n  let element;\n  if (editing) {\n    element = (\n      <TodoTextInput\n        text={todo.text}\n        editing={editing}\n        onSave={(text) => handleSave(todo.id, text)}\n      />\n    );\n  } else {\n    element = (\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={todo.completed}\n          onChange={() => completeTodo(todo.id)}\n        />\n        <label onDoubleClick={handleDoubleClick}>{todo.text}</label>\n        <button className=\"destroy\" onClick={() => deleteTodo(todo.id)} />\n      </div>\n    );\n  }\n\n  return (\n    <li\n      className={classnames({\n        completed: todo.completed,\n        editing: editing,\n      })}\n    >\n      {element}\n    </li>\n  );\n};\nexport default TodoItem;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;EAAA;;EAC1B,gBAA8BJ,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOK,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;IAC9BD,UAAU,CAAC,IAAD,CAAV;EACD,CAFD;;EAIA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAKC,IAAL,EAAc;IAC/B,IAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;MACrBP,KAAK,CAACQ,UAAN,CAAiBH,EAAjB;IACD,CAFD,MAEO;MACLL,KAAK,CAACS,QAAN,CAAeJ,EAAf,EAAmBC,IAAnB;IACD;;IACDJ,UAAU,CAAC,KAAD,CAAV;EACD,CAPD;;EAQA,IAAQQ,IAAR,GAA2CV,KAA3C,CAAQU,IAAR;EAAA,IAAcC,YAAd,GAA2CX,KAA3C,CAAcW,YAAd;EAAA,IAA4BH,UAA5B,GAA2CR,KAA3C,CAA4BQ,UAA5B;EAEA,IAAII,OAAJ;;EACA,IAAIX,OAAJ,EAAa;IACXW,OAAO,gBACL,QAAC,aAAD;MACE,IAAI,EAAEF,IAAI,CAACJ,IADb;MAEE,OAAO,EAAEL,OAFX;MAGE,MAAM,EAAE,gBAACK,IAAD;QAAA,OAAUF,UAAU,CAACM,IAAI,CAACL,EAAN,EAAUC,IAAV,CAApB;MAAA;IAHV;MAAA;MAAA;MAAA;IAAA,SADF;EAOD,CARD,MAQO;IACLM,OAAO,gBACL;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QACE,SAAS,EAAC,QADZ;QAEE,IAAI,EAAC,UAFP;QAGE,OAAO,EAAEF,IAAI,CAACG,SAHhB;QAIE,QAAQ,EAAE;UAAA,OAAMF,YAAY,CAACD,IAAI,CAACL,EAAN,CAAlB;QAAA;MAJZ;QAAA;QAAA;QAAA;MAAA,SADF,eAOE;QAAO,aAAa,EAAEF,iBAAtB;QAAA,UAA0CO,IAAI,CAACJ;MAA/C;QAAA;QAAA;QAAA;MAAA,SAPF,eAQE;QAAQ,SAAS,EAAC,SAAlB;QAA4B,OAAO,EAAE;UAAA,OAAME,UAAU,CAACE,IAAI,CAACL,EAAN,CAAhB;QAAA;MAArC;QAAA;QAAA;QAAA;MAAA,SARF;IAAA;MAAA;MAAA;MAAA;IAAA,SADF;EAYD;;EAED,oBACE;IACE,SAAS,EAAER,UAAU,CAAC;MACpBgB,SAAS,EAAEH,IAAI,CAACG,SADI;MAEpBZ,OAAO,EAAEA;IAFW,CAAD,CADvB;IAAA,UAMGW;EANH;IAAA;IAAA;IAAA;EAAA,SADF;AAUD,CAnDD;;GAAMb,Q;;KAAAA,Q;AAoDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}